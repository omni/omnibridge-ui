name: Deploy Preview to Cloud Run

on:
  pull_request:
    branches:
      - develop
    types:
      - opened
      - reopened
      - synchronize

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Start Deployment
        uses: bobheadxi/deployments@v1
        id: create-message
        with:
          step: start
          token: ${{github.token}}
          env: preview-pr-${{github.event.number}}
          desc: 'Preview deployment for PR #${{github.event.number}} of ${{github.event.pull_request.head.label}} by ${{github.event.pull_request.user.login}}'
          ref: ${{github.head_ref}}
          auto_inactive: false
          logs: https://github.com/${{github.repository}}/commit/${{github.event.after}}/checks

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{github.token}}

      - uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Undeploy
        continue-on-error: true
        run: gcloud -q run services delete omnibridge-ui-preview-${{github.event.number}} --region asia-east1

      - name: Delete image
        continue-on-error: true
        run: gcloud -q artifacts docker images delete asia-east1-docker.pkg.dev/omnibridge-ui/frontend/dev-image-${{github.event.number}}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Build Container Image
        uses: mattes/cached-docker-build-action@v1
        with:
          args: |
            . -f Dockerfile \
              --tag asia-east1-docker.pkg.dev/omnibridge-ui/frontend/dev-image-${{github.event.number}} \
              --build-arg "REACT_APP_DEFAULT_BRIDGE_DIRECTION=kovan-sokol" \
              --build-arg "REACT_APP_ENABLED_BRIDGES=eth-xdai bsc-xdai poa-xdai eth-bsc kovan-sokol" \
              --build-arg "REACT_APP_INFURA_ID=${{ secrets.PERSONAL_INFURA_ID }}" \
              --build-arg "REACT_APP_GAS_PRICE_FALLBACK_GWEI=50" \
              --build-arg "REACT_APP_GAS_PRICE_SUPPLIER_URL=https://gasprice.poa.network/" \
              --build-arg "REACT_APP_GAS_PRICE_SPEED_TYPE=fast" \
              --build-arg "REACT_APP_GAS_PRICE_UPDATE_INTERVAL=60000" \
              --build-arg "REACT_APP_ETH_PRICE_API_URL=https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=USD" \
              --build-arg "REACT_APP_ETH_PRICE_UPDATE_INTERVAL=60000" \
              --build-arg "REACT_APP_TITLE=OmniBridge - %c" \
              --build-arg "REACT_APP_DESCRIPTION=The OmniBridge multi-token extension is the simplest way to transfer ANY ERC20/ERC677/ERC827 token to and from the xDai chain." \
              --build-arg "REACT_APP_UI_STATUS_UPDATE_INTERVAL=5000" \
              --build-arg "REACT_APP_DEBUG_LOGS=true" \
              --build-arg "REACT_APP_GRAPH_HEALTH_UPDATE_INTERVAL=60000" \
              --build-arg "REACT_APP_GRAPH_HEALTH_THRESHOLD_BLOCKS=10" \
              --build-arg "REACT_APP_XDAI_RPC_URL=https://rpc.ankr.com/gnosis" \
              --build-arg "REACT_APP_POA_RPC_URL=https://core.poa.network" \
              --build-arg "REACT_APP_SOKOL_RPC_URL=https://sokol.poa.network" \
              --build-arg "REACT_APP_MAINNET_RPC_URL=https://mainnet.infura.io/v3/${{ secrets.PERSONAL_INFURA_ID }} https://mainnet-nethermind.blockscout.com/" \
              --build-arg "REACT_APP_KOVAN_RPC_URL=https://kovan.infura.io/v3/${{ secrets.PERSONAL_INFURA_ID }} https://kovan.poa.network/" \
              --build-arg "REACT_APP_BSC_RPC_URL=https://bsc-dataseed.binance.org https://bsc-dataseed1.defibit.io/" \
              --build-arg "REACT_APP_COINZILLA_API_KEY=${{ secrets.COINZILLA_API_KEY }}" \
              --build-arg "REACT_APP_OWLRACLE_API_KEY=${{ secrets.OWLRACLE_API_KEY }}" \
              --build-arg "REACT_APP_SENTRY_DSN=${{ secrets.SENTRY_DSN }}"
          cache_key: "${{github.event.inputs.cache_key}}-${{hashFiles('packages/dapp/**', 'package.json')}}"

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: asia-east1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Push Container Image
        run: docker push asia-east1-docker.pkg.dev/omnibridge-ui/frontend/dev-image-${{github.event.number}}

      - name: Deploy to Cloud Run
        id: deploy-frontend
        run: |
          gcloud -q run deploy omnibridge-ui-preview-${{github.event.number}} \
            --image asia-east1-docker.pkg.dev/omnibridge-ui/frontend/dev-image-${{github.event.number}} \
            --region asia-east1 \
            --port 3000 \
            --cpu 1 \
            --memory 512Mi \
            --ingress all \
            --allow-unauthenticated \
            --max-instances 1
      - name: Finish Deployment
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{github.token}}
          env: preview-pr-${{github.event.number}}
          env_url: https://omnibridge-ui-preview-${{github.event.number}}-kvpkvo5upq-de.a.run.app
          status: ${{job.status}}
          deployment_id: ${{steps.create-message.outputs.deployment_id}}
